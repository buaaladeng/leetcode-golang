给你一个包含 n 个整数的数组 nums，判断 nums 中是否存在三个元素 a，b，c ，使得 a + b + c = 0 ？请你找出所有满足条件且不重复的三元组。

注意：答案中不可以包含重复的三元组。

 

示例：

给定数组 nums = [-1, 0, 1, 2, -1, -4]，

满足要求的三元组集合为：
[
  [-1, 0, 1],
  [-1, -1, 2]
]


func threeSum(nums []int) [][]int {
	res := make([][]int,0)
	sort.Ints(nums)

	for i:=0;i<len(nums);i++{
		if nums[i]>0{
			break
		}
		if i>0 && nums[i]==nums[i-1]{
			continue
		}
		j := i+1
		k:= len(nums)-1
		for j<k{
			one := make([]int, 3)
			sum := nums[i] + nums[j] + nums[k]
			if sum == 0{
				one[0] = nums[i]
				one[1] = nums[j]
				one[2] = nums[k]
				res = append(res, one)
				k--
				j++
				for j<k && nums[k] == nums[k+1]{
					k--
				}
				for j<k && nums[j] == nums[j-1]{
					j++
				}
			}else if sum>0{
				k--
				for j<k && nums[k] == nums[k+1]{
					k--
				}
			}else {
				j++
				for j<k && nums[j] == nums[j-1]{
					j++
				}
			}
		}

	}
	return res
}
