1,动态规划
func lengthOfLIS(nums []int) int {
	n := len(nums)
	res := 1
	if n == 0{
		return 0
	}
	dp := make([]int,n)
	for i:=0;i<n;i++{
		dp[i]=1
	}
	for i:=1;i<n;i++{
		for j:=0;j<i;j++{
			if nums[j]<nums[i]{
				dp[i] = maxInt(dp[j]+1,dp[i])
			}
		}
		res = maxInt(dp[i],res)
	}
	return res
}

func maxInt(a,b int) int{
	if a<b{
		a = b
	}
	return a
}

2，二分查找
func lengthOfLIS(nums []int) int {
	n := len(nums)
	res := 0
	if n == 0{
		return 0
	}
	dp := make([]int,n)
	for _,num := range nums{
		i := 0
		j:= res
		for i<j{
			mid := (i+j)/2
			if dp[mid]<num{
				i=mid+1
			}else {
				j=mid
			}
		}
		dp[i] = num
		if j == res{
			res++
		}
	}

	return res
}
