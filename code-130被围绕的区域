给定一个二维的矩阵，包含 'X' 和 'O'（字母 O）。

找到所有被 'X' 围绕的区域，并将这些区域里所有的 'O' 用 'X' 填充。

示例:

X X X X
X O O X
X X O X
X O X X
运行你的函数后，矩阵变为：

X X X X
X X X X
X X X X
X O X X
解释:

被围绕的区间不会存在于边界上，换句话说，任何边界上的 'O' 都不会被填充为 'X'。 任何不在边界上，或不与边界上的 'O' 相连的 'O' 最终都会被填充为 'X'。如果两个元素在水平或垂直方向相邻，则称它们是“相连”的。


func solve(board [][]byte)  {
	n:=len(board)
	if n == 0{
		return
	}
	m:=len(board[0])
	if m == 0{
		return
	}
	for i:=0;i<=n;i++{
		dfs130(board,i,0)
		dfs130(board,i,m-1)
	}
	for i:=0;i<=m;i++{
		dfs130(board,0,i)
		dfs130(board,n-1,i)
	}
	for i:=0;i<n;i++{
		for j:=0;j<m;j++{
			if board[i][j] == '+'{
				board[i][j] = 'O'
			}else if  board[i][j] == 'O'{
				board[i][j] = 'X'
			}
		}
	}
}

func dfs130(board [][]byte,i,j int){
	n:=len(board)
	m:=len(board[0])
	if i<0 || i>=n || j<0 || j>=m || board[i][j]!='O'{
		return
	}
	board[i][j]='+'
	dfs130(board,i+1,j)
	dfs130(board,i-1,j)
	dfs130(board,i,j+1)
	dfs130(board,i,j-1)
}	
