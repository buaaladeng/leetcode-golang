给定一组非负整数，重新排列它们的顺序使之组成一个最大的整数。

示例 1:

输入: [10,2]
输出: 210
示例 2:

输入: [3,30,34,5,9]
输出: 9534330
说明: 输出结果可能非常大，所以你需要返回一个字符串而不是整数。


func largestNumber(nums []int) string {
	n := len(nums)
	res := ""
    	num := 0
	for i:=0;i<n;i++{
		if nums[i] ==0{
			num++
		}
	}
	if num == n{
		return "0"
	}
	for i:=0;i<n;i++{
		max := nums[0]
		index := 0
		for j:=1;j<len(nums);j++{
			if !comp(max,nums[j]){
				max = nums[j]
				index = j
			}
		}
		res += strconv.Itoa(max)
		nums = append(nums[:index],nums[index+1:]...)
	}
	return res
}

func comp(a,b int) bool{
	stra := []byte(strconv.Itoa(a) + strconv.Itoa(b))
	strb := []byte(strconv.Itoa(b) + strconv.Itoa(a))
	for i:=0;i<len(strb);i++{
		if stra[i] > strb[i]{
			return true
		}else if stra[i] < strb[i]{
			return false
		}
	}
	return true
}
