给出集合 [1,2,3,…,n]，其所有元素共有 n! 种排列。

按大小顺序列出所有排列情况，并一一标记，当 n = 3 时, 所有排列如下：

"123"
"132"
"213"
"231"
"312"
"321"
给定 n 和 k，返回第 k 个排列。

说明：

给定 n 的范围是 [1, 9]。
给定 k 的范围是[1,  n!]。
示例 1:

输入: n = 3, k = 3
输出: "213"
示例 2:

输入: n = 4, k = 9
输出: "2314"




func getPermutation(n int, k int) string {
	if n == 0 || k == 0{
		return ""
	}
	base :=1
	for i:=1;i<n;i++{
		base *= i
	}
	res :=make([]byte,n)
	num := make([]byte,n)
	for i:=0;i<n;i++{
		num[i] = byte(i) + '1'
	}
	k--
	for i:=1;i<n;i++{
		index := k/base
		k %= base
		res[i-1] = num[index]
		num = append(num[:index],num[index+1:]...)
		base /=(n-i)
	}
	res[n-1] = num[0]
	return string(res)
}
