func rob(nums []int) int {
	n := len(nums)
    if n == 0{
        return 0
    }
    if n == 1 {
        return nums[0]
    }
	max1 := robOnce(nums[:n-1])
	max2  := robOnce(nums[1:])
  return maxInt(max1,max2)
}
func robOnce(nums []int) int{
	n := len(nums)
	dp := make([]int,n+2)
	dp[0] = 0
	dp[1] = 0
	for i:=0;i<n;i++{
		dp[i+2] = maxInt(dp[i+1],dp[i]+nums[i])
	}
	return dp[n+1]
}

func maxInt(a,b int) int{
	if a<b{
		a = b
	}
	return a
}
