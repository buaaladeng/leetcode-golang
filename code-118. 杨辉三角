给定一个非负整数 numRows，生成杨辉三角的前 numRows 行。



在杨辉三角中，每个数是它左上方和右上方的数的和。

示例:

输入: 5
输出:
[
     [1],
    [1,1],
   [1,2,1],
  [1,3,3,1],
 [1,4,6,4,1]
]



func generate(numRows int) [][]int {
	res := make([][]int,0)
    	if numRows == 0{
		return res
	}
	if numRows == 1 {
		res = append(res,[]int{1})
		return res
	}
	if numRows == 2 {
		res = append(res,[]int{1})
		res = append(res,[]int{1,1})
		return res
	}
	res = append(res,[]int{1})
	res = append(res,[]int{1,1})

	for i:=3;i<=numRows;i++{
		pre := res[i-2]
		tmp := make([]int,0)
		tmp =append(tmp,1)
		for j:=1;j<i-1;j++{
			tmp =append(tmp,pre[j-1]+pre[j])
		}
		tmp =append(tmp,1)
		res = append(res,tmp)
	}
	return res
}



func generate(numRows int) [][]int {
	if numRows == 0 {
		return nil
	}
	result := make([][]int, numRows)
	result[0] = []int{1}
	for i := 1; i < numRows; i++ {
		result[i] = make([]int, i+1)
		result[i][0] = 1
		result[i][i] = 1
		for j := 1; j < i; j++ {
			result[i][j] = result[i-1][j-1] + result[i-1][j]
		}
	}
	return result
}
