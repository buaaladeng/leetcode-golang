给定一个字符串 s，找到 s 中最长的回文子串。你可以假设 s 的最大长度为 1000。

示例 1：

输入: "babad"
输出: "bab"
注意: "aba" 也是一个有效答案。
示例 2：

输入: "cbbd"
输出: "bb"


/**
动态规划法
*/
func huiwen(s string) string{
	n := len(s)
	dp := make([]bool,n)
	res := ""
	//fmt.Println(dp)

	for i:=n-1;i>=0;i--{
		for j:=n-1;j>=i;j--{
			dp[j] = (j - i < 2  || dp[j-1] == true) && s[i] == s[j]
			if dp[j] && j -i +1 > len(res){
				res = s[i:j+1]
			}
		}
	}
	return res

}

/**
中心扩展法
*/
func huiwen1(s string)string{
	n :=len(s)
	start := 0
	end := 0

	for i:=0;i<n;i++{
		num1 := exter(s,i,i)
		num2 := exter(s,i,i+1)
		fmt.Println(num1)
		fmt.Println(num2)
		num := maxInt(num1,num2)
		if end - start<num{
			start = i - (num-1)/2
			end =  i+ num/2
		}
	}
	return s[start:end+1]

}

func exter(s string,start int,end int) int{
	for start>=0  && end < len(s) && s[start] == s[end]{
		start--
		end++
	}
	return end-start-1
}


