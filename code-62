func uniquePaths(m int, n int) int {
    dp := make([]int, n)
	for i:=0;i<n;i++{
		dp[i] = 1
	}
	//fmt.Println(dp)
	for i:=1;i<m;i++{
		for j:=1;j<n;j++{
			dp[j] = dp[j] + dp[j-1]
		}
	}
	return dp[n-1]
}


func uniquePaths(m int, n int) int {
	dp := make([][]int,m)
	for i:=0;i<m;i++{
		tmp := make([]int,n)
		dp[i] = tmp
	}
	for i:=0;i<m;i++{
		for j:=0;j<n;j++{
			if i == 0 || j == 0{
				dp[i][j] = 1
			}else {
				dp[i][j] = dp[i-1][j] + dp[i][j-1]
			}
		}
	}
	return dp[m-1][n-1]
}
