给定一棵二叉树，想象自己站在它的右侧，按照从顶部到底部的顺序，返回从右侧所能看到的节点值。

示例:

输入: [1,2,3,null,5,null,4]
输出: [1, 3, 4]
解释:

   1            <---
 /   \
2     3         <---
 \     \
  5     4       <---


func rightSideView(root *TreeNode) []int {
	stack := make([]*TreeNode,0)
	res := make([]int,0)
    if root == nil{
        return res
    }
	stack = append(stack,root)
	for len(stack) > 0 {
		num := len(stack)
		max := 0
		for num>0{
			one := stack[0]
			stack = stack[1:]
			if num == 1{
				max = one.Val
			}
			if one.Left!=nil{
				stack = append(stack,one.Left)
			}
			if one.Right!=nil{
				stack = append(stack,one.Right)
			}
			num--
		}
		res = append(res,max)
	}
	return res
}
