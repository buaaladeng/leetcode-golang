func sortList(head *ListNode) *ListNode {
	if head == nil || head.Next == nil{
		return head
	}
	slow := head
	fast := head
	for fast.Next!=nil && fast.Next.Next != nil{
		slow = slow.Next
		fast = fast.Next.Next
	}
	mid := slow.Next
	slow.Next = nil
	l := sortList(head)
	r := sortList(mid)
	return mergeList(l,r)
}

func mergeList(list1,list2 *ListNode)*ListNode {
	dummp := new(ListNode)
	cur := dummp
	for list1!=nil && list2!=nil{
		if list1.Val<list2.Val{
			cur.Next = list1
			list1 = list1.Next
		}else {
			cur.Next = list2
			list2 = list2.Next
		}
		cur = cur.Next
	}
	if list1!= nil{
		cur.Next = list1
	}
	if list2!= nil{
		cur.Next = list2
	}
	return dummp.Next
}
