给定一个整数数组和一个整数 k，判断数组中是否存在两个不同的索引 i 和 j，使得 nums [i] = nums [j]，并且 i 和 j 的差的 绝对值 至多为 k。

 

示例 1:

输入: nums = [1,2,3,1], k = 3
输出: true
示例 2:

输入: nums = [1,0,1,1], k = 1
输出: true
示例 3:

输入: nums = [1,2,3,1,2,3], k = 2
输出: false


hashmap

func containsNearbyDuplicate(nums []int, k int) bool {
	n := len(nums)
	hashmap := make(map[int]int,0)
	for i:=0;i<n;i++{
		if hashmap[nums[i]]>0{
			if i+1-hashmap[nums[i]]<=k{
				return true
			}
		}
		hashmap[nums[i]] = i+1
	}
	return false
}
