func countPrimes(n int) int {
	res :=0
	list := make([]bool,n)
	for i:=0;i<n;i++{
		list[i] = true
	}
	for i:=2;i*i<n;i++{
		if list[i]{
			for j:=i*i;j<n;j+=i{
				list[j] = false
			}
		}
	}
	for i:=2;i<n;i++{
		if list[i]{
			res++
		}
	}
	return res
}


func countPrimes(n int) int {
	hashmap := make([]bool,n)
	for i:=2;i<n;i++{
		hashmap[i] = true
	}
	for i:=2;i * i<n;i++{
		if !hashmap[i]{
			continue
		}
		for j:=i*i;j<n;j+=i{
			hashmap[j] = false
		}
	}
	res := 0
	for i:=2;i<n;i++{
		if hashmap[i]{
			res++
		}
	}
	return res
}
