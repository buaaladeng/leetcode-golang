func calculate(s string) int {
	stack := make([]int,0)
	opera := make([]byte,0)
	n:=len(s)
	if n == 0{
		return 0
	}
	res := 0
	sign := 1
	num:=0


	for i:=0;i<n;i++{
		if s[i] >='0' && s[i]<='9'{
			num = 0
			for i<n && s[i] >='0' && s[i]<='9'{
				num = num*10 + int(s[i]-'0')
				i++
			}
			num = num * sign
			if len(opera) > 0 {
				flag := opera[len(opera)-1]
				if flag == '*'{
					first:=stack[len(stack)-1]
					num = first * num
					stack[len(stack)-1] = num
					i--
					opera = opera[:len(opera)-1]
					continue
				}else if flag == '/' {
					first:=stack[len(stack)-1]
					num = first / num
					stack[len(stack)-1] = num
					i--
					opera = opera[:len(opera)-1]
					continue
				}
			}
			stack = append(stack,num)
			i--
		}else if s[i] == '+' ||  s[i] == '*' || s[i] == '/' {
			sign = 1
			opera = append(opera,s[i])
		}else if s[i] == '-'{
			opera = append(opera,'+')
			sign = -1
		}

	}
	n = len(stack)
	for i:=0;i<n;i++{
		res += stack[i]
	}
	return res
}
