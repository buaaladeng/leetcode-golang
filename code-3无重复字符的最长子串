给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。

示例 1:

输入: "abcabcbb"
输出: 3 
解释: 因为无重复字符的最长子串是 "abc"，所以其长度为 3。
示例 2:

输入: "bbbbb"
输出: 1
解释: 因为无重复字符的最长子串是 "b"，所以其长度为 1。
示例 3:

输入: "pwwkew"
输出: 3
解释: 因为无重复字符的最长子串是 "wke"，所以其长度为 3。
     请注意，你的答案必须是 子串 的长度，"pwke" 是一个子序列，不是子串。


func lengthOfLongestSubstring(s string) int {
	s_array := []byte(s)
	n := len(s_array)
	res := 0
	start := 0
	hashmap := make(map[byte]int)
	for end:=0;end<n;end++{
		tmp := s_array[end]
		if val,ok:=hashmap[tmp];ok{
			start = maxInt(start,val)
		}
		res = maxInt(res,end-start+1)
		hashmap[tmp]=end+1
	}

	return res

}



func maxInt(a,b int) int{
	if a<b{
		a = b
	}
	return a
}
