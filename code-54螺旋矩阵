给定一个包含 m x n 个元素的矩阵（m 行, n 列），请按照顺时针螺旋顺序，返回矩阵中的所有元素。

示例 1:

输入:
[
 [ 1, 2, 3 ],
 [ 4, 5, 6 ],
 [ 7, 8, 9 ]
]
输出: [1,2,3,6,9,8,7,4,5]
示例 2:

输入:
[
  [1, 2, 3, 4],
  [5, 6, 7, 8],
  [9,10,11,12]
]
输出: [1,2,3,4,8,12,11,10,9,5,6,7]


func spiralOrder(matrix [][]int) []int {

	res := make([]int,0)
	row := len(matrix)
	if row == 0{
		return res
	}
	col := len(matrix[0])

	row_start := 0
	row_end := row
	col_start := 0
	col_end := col
	for col_start < col_end && row_start < row_end {

		for i := col_start; i < col_end; i++ {
			res = append(res, matrix[row_start][i])
		}
		row_start++
		for i := row_start; i < row_end; i++ {
			res = append(res, matrix[i][col_end-1])
		}
		col_end--
		if row_start < row_end {
			for i := col_end - 1; i >= col_start; i-- {
				res = append(res, matrix[row_end-1][i])
			}
		}
		row_end--
		if col_start < col_end {
			for i := row_end - 1; i >= row_start; i-- {
				res = append(res, matrix[i][col_start])
			}
		}
		col_start++
	}
	return res
}
