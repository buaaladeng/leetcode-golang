type Trie struct {
	array [26]*Trie
	end bool

}


/** Initialize your data structure here. */
func Constructor() Trie {
	return Trie{}
}


/** Inserts a word into the trie. */
func (this *Trie) Insert(word string)  {
	n:=len(word)
	root := this
	for i:=0;i<n;i++{
		if root.array[word[i] - 'a'] == nil{
			root.array[word[i] - 'a'] = new(Trie)
		}
		root = root.array[word[i] - 'a']
	}
	root.end = true
}


/** Returns if the word is in the trie. */
func (this *Trie) Search(word string) bool {
	n:=len(word)
	root := this
	for i:=0;i<n;i++{
		if root.array[word[i] - 'a'] == nil{
			return false
		}
		root = root.array[word[i] - 'a']
	}
	return  root.end == true
}


/** Returns if there is any word in the trie that starts with the given prefix. */
func (this *Trie) StartsWith(prefix string) bool {
	n:=len(prefix)
	root := this
	for i:=0;i<n;i++{
		if root.array[prefix[i] - 'a'] == nil{
			return false
		}
		root = root.array[prefix[i] - 'a']
	}
	return true
}
