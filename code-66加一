给定一个由整数组成的非空数组所表示的非负整数，在该数的基础上加一。

最高位数字存放在数组的首位， 数组中每个元素只存储单个数字。

你可以假设除了整数 0 之外，这个整数不会以零开头。

示例 1:

输入: [1,2,3]
输出: [1,2,4]
解释: 输入数组表示数字 123。
示例 2:

输入: [4,3,2,1]
输出: [4,3,2,2]
解释: 输入数组表示数字 4321。


func plusOne(digits []int) []int {
	n:=len(digits)
	c := 1
	res := make([]int,0)
	for i:=n-1;i>=0;i--{
		one := digits[i]
		one += c
		res = append(res,one%10)
		c = one/10
	}
	if c>0{
		res=append(res,c)
	}
	for i:=0;i<len(res)/2;i++{
		res[i],res[len(res)-1-i] = res[len(res)-1-i],res[i]
	}
	return res
}

func plusOne(digits []int) []int {
	for i:=len(digits)-1;i>=0;i--{
		if digits[i]<9{
			digits[i]++
			return digits
		}
		digits[i] = 0
	}
	res := make([]int,0)
	res = append(res, 1)
	res = append(res, digits...)
	return res

}
