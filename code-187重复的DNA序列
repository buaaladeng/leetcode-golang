所有 DNA 都由一系列缩写为 A，C，G 和 T 的核苷酸组成，例如：“ACGAATTCCG”。在研究 DNA 时，识别 DNA 中的重复序列有时会对研究非常有帮助。

编写一个函数来查找 DNA 分子中所有出现超过一次的 10 个字母长的序列（子串）。

 

示例：

输入：s = "AAAAACCCCCAAAAACCCCCCAAAAAGGGTTT"
输出：["AAAAACCCCC", "CCCCCAAAAA"]


1，利用hash表去做

func findRepeatedDnaSequences(s string) []string {
	sarray := []byte(s)
	n := len(sarray)
	res := make([]string,0)
	hashmap := make(map[string]int,0)
	for i:=0;i<n-9;i++{
		str := string(sarray[i:i+10])
		if hashmap[str] == 1{
			res = append(res,str)
			hashmap[str] += 1
		} else {
			hashmap[str] += 1
		}
	}
	return res
}



func findRepeatedDnaSequences(s string) []string {
	res := make([]string,0)
	n :=len(s)
	if n <11{
		return res
	}
	strmap := make(map[string]int)
	for i:=0;i<n-9;i++{
		substr := string(s[i:i+10])
		strmap[substr] += 1
		if num,ok := strmap[substr];ok{
			if num ==2{
				res = append(res,substr)
			}
		}
	}
	return res
}
