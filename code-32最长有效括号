给定一个只包含 '(' 和 ')' 的字符串，找出最长的包含有效括号的子串的长度。

示例 1:

输入: "(()"
输出: 2
解释: 最长有效括号子串为 "()"
示例 2:

输入: ")()())"
输出: 4
解释: 最长有效括号子串为 "()()"


func longestValidParentheses(s string) int {
	n := len(s)
	if n == 0{
		return 0
	}
	res := 0
	stack := make([]int,0)
	stack = append(stack,-1)
	for i:=0;i<n;i++{
		if s[i] == '('{
			stack = append(stack,i)
		}else {
			stack = stack[:len(stack)-1]
			if len(stack) == 0{
				stack = append(stack,i)
			}else {
				index :=stack[len(stack)-1]
				res = maxInt(res,i-index)
			}
		}
	}
	return res

}

func maxInt(a,b int)int{
	if a>b{
		return a
	}else {
		return b
	}
}


func longestValidParentheses(s string) int {
	n := len(s)
	if n == 0{
		return 0
	}
	res := 0
	left := 0
	right :=0
	for i:=0;i<n;i++{
		if s[i] == '('{
			left++
		}else {
			right++
		}
		if left == right{
			res = maxInt(res,left * 2)
		}
		if right>left{
			left=0
			right=0
		}
	}
	left=0
	right=0
	for i:=n-1;i>=0;i--{
		if s[i] == '('{
			left++
		}else {
			right++
		}
		if left == right{
			res = maxInt(res,left * 2)
		}
		if left >right{
			left=0
			right=0
		}
	}
	return res

}
