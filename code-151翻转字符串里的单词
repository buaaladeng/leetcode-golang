给定一个字符串，逐个翻转字符串中的每个单词。

 

示例 1：

输入: "the sky is blue"
输出: "blue is sky the"
示例 2：

输入: "  hello world!  "
输出: "world! hello"
解释: 输入字符串可以在前面或者后面包含多余的空格，但是反转后的字符不能包括。
示例 3：

输入: "a good   example"
输出: "example good a"
解释: 如果两个单词间有多余的空格，将反转后单词间的空格减少到只含一个。
 

说明：

无空格字符构成一个单词。
输入字符串可以在前面或者后面包含多余的空格，但是反转后的字符不能包括。
如果两个单词间有多余的空格，将反转后单词间的空格减少到只含一个。


func reverseWords(s string) string {
	s=strings.TrimSpace(s)
	n := len(s)
	str := []byte(s)
	index := 0
	flag := true
	for i:=0;i<n;i++{
		if str[i] != ' '{
			flag = true
			str[index] = str[i]
			index++
		}else if flag && str[i] == ' '{
			str[index] = str[i]
			index++
			flag = false
		}
	}
	start := 0
	for i:=0;i<index;i++ {
		if str[i] == ' ' {
			reverse(str, start, i-1)
			start = i+1
		}
	}
	reverse(str, start, index-1)
	reverse(str,0,index-1)
	return string(str[:index])
}

func reverse(str []byte,start,end int){
	for start<end{
		str[start],str[end] = str[end],str[start]
		start++
		end--
	}
}
