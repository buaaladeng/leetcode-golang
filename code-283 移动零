给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。

示例:

输入: [0,1,0,3,12]
输出: [1,3,12,0,0]
说明:

必须在原数组上操作，不能拷贝额外的数组。
尽量减少操作次数。




func moveZeroes(nums []int)  {
	n := len(nums)
	index := 0
	end := n -1
	for i:=0;i<=end;{
		if nums[i] == 0 {
			index = i
			for index < end{
				nums[index] = nums[index+1]
				index++
			}
			nums[end] = 0
			end--
		}else {
			i++
		}
	}
}


func moveZeroes(nums []int)  {
	n := len(nums)
	index := 0
	for i:=0;i<n;i++{
		if nums[i]!=0{
			nums[index]=nums[i]
			index++
		}
	}
	for index<n{
		nums[index]=0
		index++
	}
}

