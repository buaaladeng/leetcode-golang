给定一个字符串数组，将字母异位词组合在一起。字母异位词指字母相同，但排列不同的字符串。

示例:

输入: ["eat", "tea", "tan", "ate", "nat", "bat"],
输出:
[
  ["ate","eat","tea"],
  ["nat","tan"],
  ["bat"]
]


利用hash表进行统计，需要对每个单词进行转化
func groupAnagrams(strs []string) [][]string {
	n:=len(strs)
	if n==0{
		return nil
	}
	res := make([][]string,0)
	dict := make(map[string][]string,0)
	for i:=0;i<n;i++{
		origin := strs[i]
		word := dealOneWord(origin)
		dict[word] = append(dict[word],origin)
	}
	for _, v := range dict {
		res = append(res, v)
	}
	return res
}
func dealOneWord(str string)string{
	dict := make([]byte,26)
	for i:=0;i<len(str);i++{
		index := str[i]-'a'
		dict[index]++
	}
	res := make([]byte,0)
	for i,val:=range dict{
		for  val>0{
			res = append(res,byte(i+'a'))
			val--
		}
	}
	return string(res)
}
