找出所有相加之和为 n 的 k 个数的组合。组合中只允许含有 1 - 9 的正整数，并且每种组合中不存在重复的数字。

说明：

所有数字都是正整数。
解集不能包含重复的组合。 
示例 1:

输入: k = 3, n = 7
输出: [[1,2,4]]
示例 2:

输入: k = 3, n = 9
输出: [[1,2,6], [1,3,5], [2,3,4]]


func combinationSum3(k int, n int) [][]int {
	res := make([][]int,0)
	tmp := make([]int,0)
	dfs216(k,n,&res,tmp,1)
	return res
}

func dfs216(k,n int, res *[][]int, tmp []int,start int){
	if len(tmp) == k && n == 0{
		one := make([]int,k)
		copy(one,tmp)
		*res = append(*res,one)
		return
	}
	if n <= 0 {
		return
	}

	for i:=start;i<10;i++{
		tmp = append(tmp,i)
		dfs216(k,n-i,res,tmp,i+1)
		tmp = tmp[:len(tmp)-1]
	}
}
