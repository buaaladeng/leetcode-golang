给你一个整数数组 nums ，请你找出数组中乘积最大的连续子数组（该子数组中至少包含一个数字）。

 

示例 1:

输入: [2,3,-2,4]
输出: 6
解释: 子数组 [2,3] 有最大乘积 6。
示例 2:

输入: [-2,0,-1]
输出: 0
解释: 结果不能为 2, 因为 [-2,-1] 不是子数组。


func maxProduct(nums []int) int {
	n:=len(nums)
	if n == 0{
		return 0
	}
	res := nums[0]
	max := nums[0]
	min := nums[0]
	for i:=1;i<n;i++{
		premax := max
		premin := min
		max = maxInt(nums[i],maxInt(nums[i]*premax,nums[i] * premin))
		min = minInt(nums[i],minInt(nums[i]*premax,nums[i] * premin))
		res = maxInt(res,max)
	}

	return res
}



func maxInt(a,b int)int{
	if a>b{
		return a
	}else {
		return b
	}
}

func minInt(a,b int)int{
	if a>b{
		return b
	}else {
		return a
	}
}
