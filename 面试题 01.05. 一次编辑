func oneEditAway(first string, second string) bool {
	if first == second{
		return true
	}
	n1 := len(first)
	n2 := len(second)
	letter1 := []byte(first)
	letter2 := []byte(second)
	if n2 == n1{
		diff := 0
		for i:=0;i<n1;i++{
			if first[i]!=second[i]{
				diff++
			}
		}
		return diff == 1
	}else {
		if n1>n2{
			for i:=0;i<n1;i++{
				tmp := string(letter1[0:i])+string(letter1[i+1:n1])
				if tmp == second{
					return true
				}
			}
		}else {
			for i:=0;i<n2;i++{
				tmp := string(letter2[0:i])+string(letter2[i+1:n2])
				if tmp == first{
					return true
				}
			}
		}
		return false
	}

}


2，双指针法
func oneEditAway(first string, second string) bool {
	if first == second{
		return true
	}
	n1 := len(first)
	n2 := len(second)
    	if n1-n2 > 1 || n2 - n1 > 1{
		return false
	}
	i:=0
	j:=0
	diff := 0
	for i<n1 && j < n2{
		if first[i]==second[j]{
			i++
			j++
		}else {
			diff++
			if diff > 1{
				return false
			}
			if n1 > n2{
				i++
			}else if n1 < n2{
				j++
			}else {
				i++
				j++
			}
		}
	}
	return true
}
