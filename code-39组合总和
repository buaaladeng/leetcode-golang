给定一个无重复元素的数组 candidates 和一个目标数 target ，找出 candidates 中所有可以使数字和为 target 的组合。

candidates 中的数字可以无限制重复被选取。

说明：

所有数字（包括 target）都是正整数。
解集不能包含重复的组合。 
示例 1:

输入: candidates = [2,3,6,7], target = 7,
所求解集为:
[
  [7],
  [2,2,3]
]
示例 2:

输入: candidates = [2,3,5], target = 8,
所求解集为:
[
  [2,2,2,2],
  [2,3,3],
  [3,5]
]


/**
code-39
 */
func combinationSum(candidates []int, target int) [][]int {
	res := make([][]int,0)
	tmp := make([]int,0)
	dfs39(&res,tmp,candidates,target,0)
	return res
}

func dfs39(res *[][]int,tmp []int,candidates []int,target,start int){
	if target < 0 {
		return
	}
	if target == 0{
		one := make([]int,len(tmp))
		copy(one,tmp)
		*res = append(*res, one)
		return
	}
	for i:=start;i<len(candidates);i++{
		tmp = append(tmp,candidates[i])
		dfs39(res,tmp,candidates,target-candidates[i],i)
		tmp = tmp[:len(tmp)-1]
	}
}
