func kthSmallest(root *TreeNode, k int) int {
	res := make([]int,0)
	stack := make([]*TreeNode,0)
	stack =append(stack,root)
	for root != nil || len(stack)>0{

		for root!=nil{
			stack = append(stack,root)
			root = root.Left
		}
		root = stack[len(stack)-1]
		stack = stack[:len(stack)-1]
		res = append(res,root.Val)
		root = root.Right
	}
	return res[k-1]
}


 func kthSmallest(root *TreeNode, k int) int {
	res := 0
	if root == nil{
		return res
	}
	stack := make([]*TreeNode,0)
	for root != nil || len(stack) > 0{
		if root != nil{
			stack = append(stack, root)
            root = root.Left
		}else {
            root = stack[len(stack)-1]
			stack = stack[:len(stack)-1]
			k--
			if k == 0{
				return root.Val
			}
			root =  root.Right
		}
	}
	return res
}

