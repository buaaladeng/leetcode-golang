反转一个单链表。

示例:

输入: 1->2->3->4->5->NULL
输出: 5->4->3->2->1->NULL
进阶:
你可以迭代或递归地反转链表。你能否用两种方法解决这道题？


func reverseList(head *ListNode) *ListNode {
	if head == nil{
		return head
	}
	var res *ListNode
	cur := head
	for cur != nil{
		next := cur.Next
		cur.Next = res
		res = cur
		cur = next
	}
	return res
}


func reverseList(head *ListNode) *ListNode {
	return reverse(nil,head)
}

func reverse(pre,cur *ListNode) *ListNode {
	if cur == nil {
		return pre
	}
	head := reverse(cur, cur.Next)
	cur.Next = pre
	return head
}


func reverseList(head *ListNode) *ListNode {
	if head == nil || head.Next == nil{
		return head
	}
	p := reverseList(head.Next)
	head.Next.Next = head
	head.Next = nil
	return p
}
