给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。

说明：本题中，我们将空字符串定义为有效的回文串。

示例 1:

输入: "A man, a plan, a canal: Panama"
输出: true
示例 2:

输入: "race a car"
输出: false


func isPalindrome(s string) bool {
	n:= len(s)
	if n == 0{
		return true
	}
	array := []byte(s)
	index := 0
	for i:=0;i<n;i++{
		if array[i]>='a' && array[i]<='z' || (array[i]>='0' && array[i]<='9'){
			array[index]=array[i]
			index++
		}else if array[i]>='A' && array[i]<='Z'{
			array[index]=array[i]+32
			index++
		}
	}
	i:=0
	index--
	for i<index{
		if array[i] != array[index]{
			return false
		}
		i++
		index--
	}
	return true
}



func isPalindrome(s string) bool {
	s = strings.ToLower(s)
	i, j := 0, len(s)-1
	for i < j {
		for i < j && !isChar(s[i]) {
			i++
		}
		for i < j && !isChar(s[j]) {
			j--
		}
		if s[i] != s[j] {
			return false
		}
		i++
		j--
	}

	return true
}

// 判断 c 是否是需要检查的字符
func isChar(c byte) bool {
	if ('a' <= c && c <= 'z') || ('0' <= c && c <= '9') {
		return true
	}
	return false
}
